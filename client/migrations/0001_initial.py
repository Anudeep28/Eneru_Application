# Generated by Django 5.0.1 on 2025-02-23 12:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ChitFund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('about', models.TextField(null=True)),
                ('address', models.TextField(blank=True, max_length=400, null=True)),
                ('state', models.CharField(max_length=150)),
                ('country', models.CharField(max_length=150)),
                ('pin', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('LEGAL', 'Legal'), ('BUSINESS', 'Business'), ('ACADEMIC', 'Academic')], max_length=20)),
                ('content', models.TextField(help_text='Use {{placeholder}} syntax for dynamic fields')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_chitfund_owner', models.BooleanField(default=False)),
                ('is_chitfund_user', models.BooleanField(default=False)),
                ('is_namegen_user', models.BooleanField(default=False)),
                ('is_food_app_user', models.BooleanField(default=False)),
                ('is_ocr_app_user', models.BooleanField(default=False)),
                ('is_transcribe_app_user', models.BooleanField(default=False)),
                ('is_chatbot_user', models.BooleanField(default=False)),
                ('is_kuries_user', models.BooleanField(default=False)),
                ('is_financial_analyzer_user', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('age', models.IntegerField(default=18)),
                ('sex', models.IntegerField(choices=[(1, 'Male'), (2, 'Female')], default=1)),
                ('education', models.IntegerField(choices=[(1, 'Postgraduate'), (2, 'Graduate'), (3, 'Highschool'), (4, 'School'), (5, 'Others'), (6, 'Unknown')], default=6)),
                ('marriage', models.IntegerField(choices=[(1, 'Married'), (2, 'Single'), (3, 'Others')], default=2)),
                ('phoned', models.BooleanField(default=False)),
                ('phone_number', models.CharField(max_length=13)),
                ('email', models.EmailField(max_length=254)),
                ('company', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.TextField()),
                ('source', models.CharField(choices=[('YT', 'Youtube'), ('Google', 'Google'), ('Linkedin', 'Linkedin')], max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients', to='client.category')),
                ('chitfundName', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='client.chitfund')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='chitfund',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.userprofile'),
        ),
        migrations.AddField(
            model_name='category',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.userprofile'),
        ),
        migrations.CreateModel(
            name='FilledTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.JSONField(default=dict, help_text='Stores user inputs for placeholders')),
                ('audio_recordings', models.JSONField(default=dict, help_text='Stores paths to audio recordings')),
                ('export_format', models.CharField(choices=[('PDF', 'PDF'), ('DOCX', 'DOCX')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='filled_templates', to='client.template')),
            ],
            options={
                'ordering': ['-modified_at'],
                'indexes': [models.Index(fields=['uuid'], name='client_fill_uuid_e63dac_idx'), models.Index(fields=['user', '-modified_at'], name='client_fill_user_id_155d70_idx')],
            },
        ),
    ]
