"""
Django settings for chitfund project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""


from pathlib import Path
import environ

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Take environment variables from .env file
READ_DOT_ENV_FILE = env.bool('READ_DOT_ENV_FILE', default=False)
if READ_DOT_ENV_FILE:
    environ.Env.read_env()

# False if not in os.environ because of casting above
DEBUG = env('DEBUG')

# Raises Django's ImproperlyConfigured
# exception if SECRET_KEY not in os.environ
SECRET_KEY = env('SECRET_KEY')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# We are going to save the key in envirnment
# for this we will use the django envirno package
# SECRET_KEY = 'django-insecure-m&d+s_gv)pb42+q)sivkve1-%$gld6t4xzl%+nok8r-icstsqe'

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

#ALLOWED_HOSTS = ['www.eneru.co.in']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # local apps
    'client',
    'kuries',
    'trial1.apps.Trial1Config',
    'chatbot',
    # installed 3rd party apps
    'crispy_forms',
    'crispy_tailwind',

    # for static files
    'whitenoise.runserver_nostatic',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'chitfund.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chitfund.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# for postgresql functionality
DATABASES = {
    'default': {
        ####### This for production case ####################
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env("DB_USER")+"$"+env("DB_NAME"),#'<your_username>$<your_database_name>',
        'USER': env("DB_USER"),#'<your_username>',
        'PASSWORD': env("DB_PASSWORD"),#'<your_mysql_password>',
        'HOST': env("DB_HOST"),#'<your_mysql_hostname>',
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            }
        ######## This is for development phase ############
        # 'ENGINE': 'django.db.backends.postgresql_psycopg2',
        # 'NAME': env("DB_NAME"),#'chitfund',
        # 'USER': env("DB_USER"),#'postgres',
        # 'PASSWORD': env("DB_PASSWORD"),#'Onepiece@28',
        # 'HOST': env("DB_HOST"),#'localhost',
        # 'PORT': env("DB_PORT"),#'5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/


#### White noise package for static config in
# production envirnment
#STATIC_URL = 'static/'
STATIC_URL = '/static/'
MEDIA_URL = '/images/'

STATICFILES_DIRS = [
    BASE_DIR/'static'
]
# for production level deployment
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# For user uploaded content
MEDIA_ROOT = BASE_DIR / 'static/images'

STATIC_ROOT = BASE_DIR / "static_root"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Adding the Abstract user model instead of Django User model
AUTH_USER_MODEL = 'client.User'


# Sending emails through Django
EMAIL_BACKEND = env('EMAIL_BACKEND')
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_USE_TLS = env('EMAIL_USE_TLS')
EMAIL_PORT = env('EMAIL_PORT')
EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

# Development Mail
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# whe the user loggs in he is redirected to this url below
#LOGIN_REDIRECT_URL = "/client"
"""This is updated when you use the login and logout
    of the auth user from django package where we need to provide the redirecting url
"""
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"
# this is for the Mixin we have used in the views
LOGIN_URL = '/login'


# You can set your default template pack for your project
# using the CRISPY_TEMPLATE_PACK Django settings variable:
CRISPY_TEMPLATE_PACK = 'tailwind'
CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"


###### Gemini API KEY
GEMINI_API_KEY = env("GEMINI_API_KEY")


# have to learn the below command
if not DEBUG:
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO','hhtps')
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE =True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_HSTS_SECONDS = 31536000 # 1 YEAR # important
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    X_FRAME_OPTIONS = "DENY"

    ALLOWED_HOSTS = ['www.eneru.co.in'] # THIS NEEDS TO BE CHNAGED WHEN DOMAIN IS KNOWN
    EMAIL_BACKEND = env('EMAIL_BACKEND')
    EMAIL_HOST = env('EMAIL_HOST')
    EMAIL_USE_TLS = env('EMAIL_USE_TLS')
    EMAIL_PORT = env('EMAIL_PORT')
    EMAIL_HOST_USER = env('EMAIL_HOST_USER')
    EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')